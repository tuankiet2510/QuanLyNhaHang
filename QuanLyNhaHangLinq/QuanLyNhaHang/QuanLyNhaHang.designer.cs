#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyNhaHang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyNhaHang")]
	public partial class QuanLyNhaHangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAN(BAN instance);
    partial void UpdateBAN(BAN instance);
    partial void DeleteBAN(BAN instance);
    partial void InsertDANHMUC(DANHMUC instance);
    partial void UpdateDANHMUC(DANHMUC instance);
    partial void DeleteDANHMUC(DANHMUC instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InserttblDetail(tblDetail instance);
    partial void UpdatetblDetail(tblDetail instance);
    partial void DeletetblDetail(tblDetail instance);
    partial void InserttblMain(tblMain instance);
    partial void UpdatetblMain(tblMain instance);
    partial void DeletetblMain(tblMain instance);
    #endregion
		
		public QuanLyNhaHangDataContext() : 
				base(global::QuanLyNhaHang.Properties.Settings.Default.QuanLyNhaHangConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaHangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaHangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaHangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNhaHangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAN> BANs
		{
			get
			{
				return this.GetTable<BAN>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<tblDetail> tblDetails
		{
			get
			{
				return this.GetTable<tblDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblMain> tblMains
		{
			get
			{
				return this.GetTable<tblMain>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAN")]
	public partial class BAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tid;
		
		private string _Tname;
		
		private string _Tstate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTidChanging(string value);
    partial void OnTidChanged();
    partial void OnTnameChanging(string value);
    partial void OnTnameChanged();
    partial void OnTstateChanging(string value);
    partial void OnTstateChanged();
    #endregion
		
		public BAN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tid
		{
			get
			{
				return this._Tid;
			}
			set
			{
				if ((this._Tid != value))
				{
					this.OnTidChanging(value);
					this.SendPropertyChanging();
					this._Tid = value;
					this.SendPropertyChanged("Tid");
					this.OnTidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tname", DbType="NVarChar(50)")]
		public string Tname
		{
			get
			{
				return this._Tname;
			}
			set
			{
				if ((this._Tname != value))
				{
					this.OnTnameChanging(value);
					this.SendPropertyChanging();
					this._Tname = value;
					this.SendPropertyChanged("Tname");
					this.OnTnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tstate", DbType="NVarChar(50)")]
		public string Tstate
		{
			get
			{
				return this._Tstate;
			}
			set
			{
				if ((this._Tstate != value))
				{
					this.OnTstateChanging(value);
					this.SendPropertyChanging();
					this._Tstate = value;
					this.SendPropertyChanged("Tstate");
					this.OnTstateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDM;
		
		private string _TenDM;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDMChanging(string value);
    partial void OnMaDMChanged();
    partial void OnTenDMChanging(string value);
    partial void OnTenDMChanged();
    #endregion
		
		public DANHMUC()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDM", DbType="NVarChar(50)")]
		public string TenDM
		{
			get
			{
				return this._TenDM;
			}
			set
			{
				if ((this._TenDM != value))
				{
					this.OnTenDMChanging(value);
					this.SendPropertyChanging();
					this._TenDM = value;
					this.SendPropertyChanged("TenDM");
					this.OnTenDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_SANPHAMs", ThisKey="MaDM", OtherKey="MaLoaiSP")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Manv;
		
		private string _Ten;
		
		private string _SDT;
		
		private string _ChucVu;
		
		private System.Nullable<double> _Luong;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManvChanging(string value);
    partial void OnManvChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnLuongChanging(System.Nullable<double> value);
    partial void OnLuongChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manv", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Manv
		{
			get
			{
				return this._Manv;
			}
			set
			{
				if ((this._Manv != value))
				{
					this.OnManvChanging(value);
					this.SendPropertyChanging();
					this._Manv = value;
					this.SendPropertyChanged("Manv");
					this.OnManvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Float")]
		public System.Nullable<double> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="Manv", OtherKey="MaNV")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _TenSP;
		
		private string _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private System.Nullable<double> _GiaSP;
		
		private System.Data.Linq.Binary _AnhSP;
		
		private EntityRef<DANHMUC> _DANHMUC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    partial void OnGiaSPChanging(System.Nullable<double> value);
    partial void OnGiaSPChanged();
    partial void OnAnhSPChanging(System.Data.Linq.Binary value);
    partial void OnAnhSPChanged();
    #endregion
		
		public SANPHAM()
		{
			this._DANHMUC = default(EntityRef<DANHMUC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(50)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(50)")]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._DANHMUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(50)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSP", DbType="Float")]
		public System.Nullable<double> GiaSP
		{
			get
			{
				return this._GiaSP;
			}
			set
			{
				if ((this._GiaSP != value))
				{
					this.OnGiaSPChanging(value);
					this.SendPropertyChanging();
					this._GiaSP = value;
					this.SendPropertyChanged("GiaSP");
					this.OnGiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSP", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AnhSP
		{
			get
			{
				return this._AnhSP;
			}
			set
			{
				if ((this._AnhSP != value))
				{
					this.OnAnhSPChanging(value);
					this.SendPropertyChanging();
					this._AnhSP = value;
					this.SendPropertyChanged("AnhSP");
					this.OnAnhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_DANHMUC", ThisKey="MaLoaiSP", OtherKey="MaDM", IsForeignKey=true)]
		public DANHMUC DANHMUC
		{
			get
			{
				return this._DANHMUC.Entity;
			}
			set
			{
				DANHMUC previousValue = this._DANHMUC.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUC.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._DANHMUC.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaLoaiSP = value.MaDM;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("DANHMUC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private string _MaNV;
		
		private System.Nullable<int> _CapDoQuyen;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnCapDoQuyenChanging(System.Nullable<int> value);
    partial void OnCapDoQuyenChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(50)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapDoQuyen", DbType="Int")]
		public System.Nullable<int> CapDoQuyen
		{
			get
			{
				return this._CapDoQuyen;
			}
			set
			{
				if ((this._CapDoQuyen != value))
				{
					this.OnCapDoQuyenChanging(value);
					this.SendPropertyChanging();
					this._CapDoQuyen = value;
					this.SendPropertyChanged("CapDoQuyen");
					this.OnCapDoQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="Manv", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MaNV = value.Manv;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDetails")]
	public partial class tblDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _MaBill;
		
		private string _proID;
		
		private string _proName;
		
		private System.Nullable<int> _qty;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<double> _amount;
		
		private int _DetailID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBillChanging(System.Nullable<int> value);
    partial void OnMaBillChanged();
    partial void OnproIDChanging(string value);
    partial void OnproIDChanged();
    partial void OnproNameChanging(string value);
    partial void OnproNameChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void OnDetailIDChanging(int value);
    partial void OnDetailIDChanged();
    #endregion
		
		public tblDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBill", DbType="Int")]
		public System.Nullable<int> MaBill
		{
			get
			{
				return this._MaBill;
			}
			set
			{
				if ((this._MaBill != value))
				{
					this.OnMaBillChanging(value);
					this.SendPropertyChanging();
					this._MaBill = value;
					this.SendPropertyChanged("MaBill");
					this.OnMaBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proID", DbType="VarChar(50)")]
		public string proID
		{
			get
			{
				return this._proID;
			}
			set
			{
				if ((this._proID != value))
				{
					this.OnproIDChanging(value);
					this.SendPropertyChanging();
					this._proID = value;
					this.SendPropertyChanged("proID");
					this.OnproIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proName", DbType="NVarChar(50)")]
		public string proName
		{
			get
			{
				return this._proName;
			}
			set
			{
				if ((this._proName != value))
				{
					this.OnproNameChanging(value);
					this.SendPropertyChanging();
					this._proName = value;
					this.SendPropertyChanged("proName");
					this.OnproNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMain")]
	public partial class tblMain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _aDate;
		
		private string _aTime;
		
		private string _TableName;
		
		private string _WaiterName;
		
		private string _status;
		
		private string _orderType;
		
		private System.Nullable<double> _total;
		
		private System.Nullable<double> _received;
		
		private System.Nullable<double> _change;
		
		private string _driverID;
		
		private string _cusName;
		
		private string _cusPhone;
		
		private int _MaBill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaDateChanging(System.Nullable<System.DateTime> value);
    partial void OnaDateChanged();
    partial void OnaTimeChanging(string value);
    partial void OnaTimeChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnWaiterNameChanging(string value);
    partial void OnWaiterNameChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnorderTypeChanging(string value);
    partial void OnorderTypeChanged();
    partial void OntotalChanging(System.Nullable<double> value);
    partial void OntotalChanged();
    partial void OnreceivedChanging(System.Nullable<double> value);
    partial void OnreceivedChanged();
    partial void OnchangeChanging(System.Nullable<double> value);
    partial void OnchangeChanged();
    partial void OndriverIDChanging(string value);
    partial void OndriverIDChanged();
    partial void OncusNameChanging(string value);
    partial void OncusNameChanged();
    partial void OncusPhoneChanging(string value);
    partial void OncusPhoneChanged();
    partial void OnMaBillChanging(int value);
    partial void OnMaBillChanged();
    #endregion
		
		public tblMain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aDate", DbType="Date")]
		public System.Nullable<System.DateTime> aDate
		{
			get
			{
				return this._aDate;
			}
			set
			{
				if ((this._aDate != value))
				{
					this.OnaDateChanging(value);
					this.SendPropertyChanging();
					this._aDate = value;
					this.SendPropertyChanged("aDate");
					this.OnaDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aTime", DbType="VarChar(50)")]
		public string aTime
		{
			get
			{
				return this._aTime;
			}
			set
			{
				if ((this._aTime != value))
				{
					this.OnaTimeChanging(value);
					this.SendPropertyChanging();
					this._aTime = value;
					this.SendPropertyChanged("aTime");
					this.OnaTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaiterName", DbType="NVarChar(50)")]
		public string WaiterName
		{
			get
			{
				return this._WaiterName;
			}
			set
			{
				if ((this._WaiterName != value))
				{
					this.OnWaiterNameChanging(value);
					this.SendPropertyChanging();
					this._WaiterName = value;
					this.SendPropertyChanged("WaiterName");
					this.OnWaiterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(15)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderType", DbType="VarChar(20)")]
		public string orderType
		{
			get
			{
				return this._orderType;
			}
			set
			{
				if ((this._orderType != value))
				{
					this.OnorderTypeChanging(value);
					this.SendPropertyChanging();
					this._orderType = value;
					this.SendPropertyChanged("orderType");
					this.OnorderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float")]
		public System.Nullable<double> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_received", DbType="Float")]
		public System.Nullable<double> received
		{
			get
			{
				return this._received;
			}
			set
			{
				if ((this._received != value))
				{
					this.OnreceivedChanging(value);
					this.SendPropertyChanging();
					this._received = value;
					this.SendPropertyChanged("received");
					this.OnreceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change", DbType="Float")]
		public System.Nullable<double> change
		{
			get
			{
				return this._change;
			}
			set
			{
				if ((this._change != value))
				{
					this.OnchangeChanging(value);
					this.SendPropertyChanging();
					this._change = value;
					this.SendPropertyChanged("change");
					this.OnchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverID", DbType="NVarChar(50)")]
		public string driverID
		{
			get
			{
				return this._driverID;
			}
			set
			{
				if ((this._driverID != value))
				{
					this.OndriverIDChanging(value);
					this.SendPropertyChanging();
					this._driverID = value;
					this.SendPropertyChanged("driverID");
					this.OndriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusName", DbType="NVarChar(50)")]
		public string cusName
		{
			get
			{
				return this._cusName;
			}
			set
			{
				if ((this._cusName != value))
				{
					this.OncusNameChanging(value);
					this.SendPropertyChanging();
					this._cusName = value;
					this.SendPropertyChanged("cusName");
					this.OncusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusPhone", DbType="VarChar(50)")]
		public string cusPhone
		{
			get
			{
				return this._cusPhone;
			}
			set
			{
				if ((this._cusPhone != value))
				{
					this.OncusPhoneChanging(value);
					this.SendPropertyChanging();
					this._cusPhone = value;
					this.SendPropertyChanged("cusPhone");
					this.OncusPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBill", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBill
		{
			get
			{
				return this._MaBill;
			}
			set
			{
				if ((this._MaBill != value))
				{
					this.OnMaBillChanging(value);
					this.SendPropertyChanging();
					this._MaBill = value;
					this.SendPropertyChanged("MaBill");
					this.OnMaBillChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
